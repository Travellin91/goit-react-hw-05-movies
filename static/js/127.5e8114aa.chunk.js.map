{"version":3,"file":"static/js/127.5e8114aa.chunk.js","mappings":"8PAaA,EAVqB,WACnB,OACE,4BACE,kDACA,mEACA,mCAAS,SAAC,KAAD,CAAMA,GAAG,IAAT,4BAGd,ECJc,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IACXE,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJR,EAAUQ,EACX,IACAC,OAAM,SAAAR,GACLC,EAAS,0GACTQ,QAAQC,IAAIV,EACb,IACAW,SAAQ,kBAAMR,GAAW,EAAjB,GAGd,GAAE,IAEH,IAAMS,GAAcV,IAAYJ,EAAOe,OACvC,OACE,+BACE,UAACC,EAAA,EAAD,YACE,SAAC,IAAD,CAAaC,KAAM,oBAClBb,GAAW,yEACXU,IAAc,SAAC,EAAD,IACdZ,IAAS,yBAAMA,IACfF,IAAU,SAAC,IAAD,CAAWA,OAAQA,QAIrC,C,kDCXD,IAzBkB,SAAC,GAA8B,IAA5BA,EAA2B,EAA3BA,OAAQkB,EAAmB,EAAnBA,aAC3B,OACE,+BACE,wBACGlB,EAAOmB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAMxB,GAAI,CAAEyB,SAAS,WAAD,OAAaF,GAAMG,MAAO,CAAEC,KAAMN,IAAtD,UACE,wBAAKG,OAFAD,EADC,OAUnB,C,sDCjBD,OAAiB,E,SCCF,SAASK,EAAT,GAAgC,IAATR,EAAQ,EAARA,KACpC,OAAO,eAAIS,UAAWC,EAAAA,MAAf,SAA8BV,GACtC,C,+LCFKW,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHvB,EAAS,mCAAG,yGAAOwB,EAAP,+BAAc,EAAd,SACLF,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACkBF,EADlB,iBACkCG,EADlC,wCADK,cACjBC,EADiB,yBAIhBA,EAAIC,KAAKxB,SAJO,2CAAH,qDAOTyB,EAAY,mCAAG,WAAOC,GAAP,4FAAcJ,EAAd,+BAAqB,EAArB,SACRF,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACqBF,EADrB,iBACqCG,EADrC,kBACmDI,EADnD,wCADQ,cACpBH,EADoB,yBAKnBA,EAAIC,KAAKxB,SALU,2CAAH,sDAQZ2B,EAAkB,mCAAG,WAAMhB,GAAN,uFACdS,EAAAA,EAAAA,IAAA,UACbC,EADa,YACcV,EADd,oBAC4BQ,EAD5B,oBADc,cAC1BI,EAD0B,yBAKzBA,EAAIC,MALqB,2CAAH,sDAOlBI,EAAkB,mCAAG,WAAMjB,GAAN,uFACdS,EAAAA,EAAAA,IAAA,iBACNT,GADM,OACDU,EADC,oBACkCF,EADlC,oBADc,cAC1BI,EAD0B,yBAKzBA,EAAIC,KAAKK,MALgB,2CAAH,sDAQlBC,EAAkB,mCAAG,WAAOnB,GAAP,4FAAWW,EAAX,+BAAkB,EAAlB,SACdF,EAAAA,EAAAA,IAAA,iBACNT,GADM,OACDU,EADC,oBACkCF,EADlC,gCACiEG,IAFnD,cAC1BC,EAD0B,yBAKzBA,EAAIC,KAAKxB,SALgB,2CAAH,qD","sources":["components/ui/NotFoundView.jsx","components/HomePage/HomePage.js","components/Movies/Movies.jsx","webpack://react-homework-template/./src/components/Pageheading/PageHeading.styles.css?dcea","components/Pageheading/Pageheading.js","components/service/service.jsx"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundView = () => {\n  return (\n    <div>\n      <h1>404 - Page Not Found</h1>\n      <p>The requested page could not be found.</p>\n      <p>Go to <Link to=\"/\">Home page</Link></p>\n    </div>\n  );\n};\n\nexport default NotFoundView;\n\n","import Container from 'components/Container/Container';\nimport PageHeading from 'components/Pageheading/Pageheading';\nimport MovieList from 'components/Movies/Movies';\nimport { useEffect, useState } from 'react';\nimport { getMovies } from 'components/service/service';\nimport NotFoundView from 'components/ui/NotFoundView';\n\nexport default function GetTrendingMovies() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchTrendingMovies = () => {\n      setLoading(true);\n      getMovies()\n        .then(results => {\n          setMovies(results);\n        })\n        .catch(error => {\n          setError('Ой. Виникла помилка...');\n          console.log(error);\n        })\n        .finally(() => setLoading(false));\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  const isNotFound = !loading && !movies.length;\n  return (\n    <>\n      <Container>\n        <PageHeading text={'Trending Movies'}></PageHeading>\n        {loading && 'Завнтаження ...'}\n        {isNotFound && <NotFoundView />}\n        {error && <div>{error}</div>}\n        {movies && <MovieList movies={movies} />}\n      </Container>\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst MovieList = ({ movies, prevLocation }) => {\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={{ pathname: `/movies/${id}`, state: { from: prevLocation } }}>\n              <h3>{original_title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {};","import styles from './PageHeading.styles.css';\n\nexport default function PageHeading({ text }) {\n  return <h1 className={styles.title}>{text}</h1>;\n}","import axios from 'axios';\n\nconst API_KEY = 'f888f3c3fbbc8c9a0c5eba421bbc0c31';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  return res.data.results;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n"],"names":["to","GetTrendingMovies","useState","movies","setMovies","error","setError","loading","setLoading","useEffect","getMovies","then","results","catch","console","log","finally","isNotFound","length","Container","text","prevLocation","map","id","original_title","pathname","state","from","PageHeading","className","styles","API_KEY","axios","END_POINTS","page","res","data","fetchByQuery","query","fetchMoviesDetails","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}